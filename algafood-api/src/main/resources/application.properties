# configuracao do banco de dados
spring.datasource.url=jdbc:mysql://localhost/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=123456

# gerar e executar ddl (criar tabelas automaticamente)
# spring.jpa.generate-ddl=true
# create - a cada execucao deleta tabelas e cria tabelas
# spring.jpa.hibernate.ddl-auto=create
# mostrar o sql quando executar consulta no banco de dados
spring.jpa.show-sql=true
# configuracao do dialeto - engine (problema da chave estrangeira)
spring.jpa.properties.hibernate-dialect=org.hibernate.dialect.MySQL57Dialect

# permite ter ate 5 conexoes no pool
spring.datasource.hikari.maximum-pool-size=5
# se nao tem minimo assume o maximo
spring.datasource.hikari.minimum-idle=3
# tempo limite de ociosidade em milisegundos mas nao e tao preciso/exato
spring.datasource.hikari.idle-timeout=10000

# criando migracao a partir de DDL gerado por schema generation
# spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
# spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql

# inserir dados de testes quando subir a app
spring.flyway.locations=classpath:db/migration,classpath:db/testdata

# habilitar lancamento de excecao caso passe alguma propriedade inexistente no json de entrada
spring.jackson.deserialization.fail-on-unknown-properties=true

# habilitar lancamento de excecao caso passe alguma propriedade ignorada no json de entrada
spring.jackson.deserialization.fail-on-ignored-properties=true

# se nao tiver um mapeamento de um recurso lanca a excecao NoHandlerFoundException e desabilitando recursos estaticos para funcionar
spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false

# separar palavras dos atributos no json com "_"
# spring.jackson.property-naming-strategy=SNAKE_CASE