@Repository 
- é um componente (@Component) 
- adiciona um tradutor de exceptions
- existe uma classe  do spring que gerencia e intercepta os métodos 
- se encontrar exceptions de determinado tipo faz a tradução para exceptions mais especificas do spring de outro tipo

spring data jpa
- focado em ajudar a implementar repositórios JPA com muito mais produtividade 
- eliminando boa parte do código boilerplate 
- SimpleJpaRepository é a implementação de JpaRepository e já adiciona a anotação @Transactional em seus métodos

query methods
prefixos
find, read, get, query e stream tem funcionamento igual
tags first e top[n]
prefixos exists e count 

query nomeada
consulta jpql com @Query e @Param
@Query("from Restaurante where nome like %:nome% and cozinha.id = :id")
List<Restaurante> consultarPorNome(String nome, @Param("id") Long cozinha);

consulta jpql externalizada
arquivo com as query jpql deve estar em resources/META-INF/orm.xml

repositorio customizado usando jpql e criteria

padrão specifications (DDD)
- encalpsula restrições (filtro) e pode ser combinado com outros specifications

adicionar import statico automaticamente
window - preferences - java - editor - content assist - favorites - new type
colocar path e nome da classe

@Lazy -> só instancia a dependencia quando for preciso (referencia circular)

